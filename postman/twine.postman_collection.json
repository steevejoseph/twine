{
	"info": {
		"_postman_id": "bc46ef80-4c39-44d8-85ae-82a06cbb927a",
		"name": "twine",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Local",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Signup",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a49903e3-8b4d-45df-8d98-e755f79910ea",
										"exec": [
											"pm.test(\"Signup should pass on rangen user\", () => {",
											"    pm.response.to.have.status(200);",
											"})",
											"// pm.test(\"Signup should fail when user already exists\", () => {",
											"//     pm.response.to.have.status(500);",
											"// })",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f05b4a9e-f9bf-4202-abcc-c612dd5f0102",
										"exec": [
											"const r = Math.floor(Math.random() * 1e9);",
											"const signupUserEmail = `test${r}@fakedomain.com`;",
											"pm.collectionVariables.set('signupUserEmail', signupUserEmail);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "{{signupUserEmail}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "test",
											"type": "text"
										},
										{
											"key": "friends",
											"value": "thesteevejoseph@gmail.com",
											"type": "text",
											"disabled": true
										},
										{
											"key": "type",
											"value": "test",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/api/signup",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "de8063c3-b435-470e-885a-90285b97c78b",
										"exec": [
											"pm.test(\"Login should pass with existing user\", () => {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"pm.test(\"Login should return a token\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(!!jsonData.token).to.eql(true);",
											"});",
											"",
											"const jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"token\", jsonData.token);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "edc5dc16-ae22-4a20-9dfc-616995834864",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "thesteevejoseph@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "dontlook",
											"type": "text"
										},
										{
											"key": "token",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/api/login",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Users (auth required)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9925409b-2dd7-4a5b-ba39-38339ef9630a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Users array non-empty\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.length).to.be.gt(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/users",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clear Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/users/clearUsers",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"users",
										"clearUsers"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Users Except Self (auth required)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/users/except-self",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"users",
										"except-self"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Users Except Self And Friends (auth required)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{API_URL}}/api/users/except-self-friends",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"users",
										"except-self-friends"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Reflections",
					"item": [
						{
							"name": "Upload Reflection",
							"request": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Client-ID 04ba46f682ffaaa",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": [
												"/Users/steeve/Desktop/hbait/before-fine.jpeg",
												"/Users/steeve/Desktop/hbait/fine.jpeg"
											]
										},
										{
											"key": "reflector",
											"value": "hello@steevejoseph.me",
											"type": "text"
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/steeve/Downloads/twine-test-vid.MP4",
											"disabled": true
										},
										{
											"key": "image",
											"type": "file",
											"src": "/Users/steeve/Downloads/twine-test-audio.mp4",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/api/reflections/upload?reflectee=thesteevejoseph@gmail.com&reflector=hello@steevejoseph.me",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"reflections",
										"upload"
									],
									"query": [
										{
											"key": "reflectee",
											"value": "thesteevejoseph@gmail.com"
										},
										{
											"key": "reflector",
											"value": "hello@steevejoseph.me"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Request Reflections (auth)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "reflectors",
											"value": "hello@steevejoseph.me",
											"type": "text"
										},
										{
											"key": "reflectors",
											"value": "steevejoseph@knights.ucf.edu",
											"type": "text"
										},
										{
											"key": "reflectors",
											"value": "blah",
											"type": "text",
											"disabled": true
										},
										{
											"key": "reflectors",
											"value": "blah",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{API_URL}}/api/reflections/request",
									"host": [
										"{{API_URL}}"
									],
									"path": [
										"api",
										"reflections",
										"request"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Imgur",
			"item": [
				{
					"name": "Delete Imgur Post",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Client-ID 04ba46f682ffaaa",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.imgur.com/3/image/tBzGFIFF4qAPEZy\n",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"image",
								"tBzGFIFF4qAPEZy\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Imgur API Upload",
					"request": {
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Client-ID 04ba46f682ffaaa",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": [
										"/Users/steeve/Desktop/hbait/before-fine.jpeg",
										"/Users/steeve/Desktop/hbait/fine.jpeg"
									],
									"disabled": true
								},
								{
									"key": "image",
									"type": "file",
									"src": "/Users/steeve/Downloads/twine-test-vid.MP4"
								}
							]
						},
						"url": {
							"raw": "https://api.imgur.com/3/upload\n",
							"protocol": "https",
							"host": [
								"api",
								"imgur",
								"com"
							],
							"path": [
								"3",
								"upload\n"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "7b6d53d9-0cf5-4c0a-975c-988fd9afe9c8",
			"key": "signupUserEmail",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}